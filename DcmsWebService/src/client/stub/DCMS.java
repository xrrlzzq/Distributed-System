
package client.stub;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DCMS", targetNamespace = "http://service.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DCMS {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editRecord", targetNamespace = "http://service.server/", className = "client.stub.EditRecord")
    @ResponseWrapper(localName = "editRecordResponse", targetNamespace = "http://service.server/", className = "client.stub.EditRecordResponse")
    @Action(input = "http://service.server/DCMS/editRecordRequest", output = "http://service.server/DCMS/editRecordResponse")
    public String editRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecordCounts", targetNamespace = "http://service.server/", className = "client.stub.GetRecordCounts")
    @ResponseWrapper(localName = "getRecordCountsResponse", targetNamespace = "http://service.server/", className = "client.stub.GetRecordCountsResponse")
    @Action(input = "http://service.server/DCMS/getRecordCountsRequest", output = "http://service.server/DCMS/getRecordCountsResponse")
    public String getRecordCounts(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSRecord", targetNamespace = "http://service.server/", className = "client.stub.CreateSRecord")
    @ResponseWrapper(localName = "createSRecordResponse", targetNamespace = "http://service.server/", className = "client.stub.CreateSRecordResponse")
    @Action(input = "http://service.server/DCMS/createSRecordRequest", output = "http://service.server/DCMS/createSRecordResponse")
    public String createSRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "transferRecord", targetNamespace = "http://service.server/", className = "client.stub.TransferRecord")
    @ResponseWrapper(localName = "transferRecordResponse", targetNamespace = "http://service.server/", className = "client.stub.TransferRecordResponse")
    @Action(input = "http://service.server/DCMS/transferRecordRequest", output = "http://service.server/DCMS/transferRecordResponse")
    public String transferRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTRecord", targetNamespace = "http://service.server/", className = "client.stub.CreateTRecord")
    @ResponseWrapper(localName = "createTRecordResponse", targetNamespace = "http://service.server/", className = "client.stub.CreateTRecordResponse")
    @Action(input = "http://service.server/DCMS/createTRecordRequest", output = "http://service.server/DCMS/createTRecordResponse")
    public String createTRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        String arg6);

}
